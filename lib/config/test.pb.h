/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9.1 */

#ifndef PB_TEST_PB_H_INCLUDED
#define PB_TEST_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _SensorData {
    int32_t id;
    float temperature;
    float humidity;
} SensorData;

typedef struct _ControlCommand {
    int32_t device_id;
} ControlCommand;

typedef struct _SystemMessage {
    pb_size_t which_payload;
    union {
        SensorData sensor_data;
        ControlCommand control_command;
    } payload;
} SystemMessage;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define SensorData_init_default                  {0, 0, 0}
#define ControlCommand_init_default              {0}
#define SystemMessage_init_default               {0, {SensorData_init_default}}
#define SensorData_init_zero                     {0, 0, 0}
#define ControlCommand_init_zero                 {0}
#define SystemMessage_init_zero                  {0, {SensorData_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define SensorData_id_tag                        1
#define SensorData_temperature_tag               2
#define SensorData_humidity_tag                  3
#define ControlCommand_device_id_tag             1
#define SystemMessage_sensor_data_tag            2
#define SystemMessage_control_command_tag        3

/* Struct field encoding specification for nanopb */
#define SensorData_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    id,                1) \
X(a, STATIC,   SINGULAR, FLOAT,    temperature,       2) \
X(a, STATIC,   SINGULAR, FLOAT,    humidity,          3)
#define SensorData_CALLBACK NULL
#define SensorData_DEFAULT NULL

#define ControlCommand_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    device_id,         1)
#define ControlCommand_CALLBACK NULL
#define ControlCommand_DEFAULT NULL

#define SystemMessage_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,sensor_data,payload.sensor_data),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,control_command,payload.control_command),   3)
#define SystemMessage_CALLBACK NULL
#define SystemMessage_DEFAULT NULL
#define SystemMessage_payload_sensor_data_MSGTYPE SensorData
#define SystemMessage_payload_control_command_MSGTYPE ControlCommand

extern const pb_msgdesc_t SensorData_msg;
extern const pb_msgdesc_t ControlCommand_msg;
extern const pb_msgdesc_t SystemMessage_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define SensorData_fields &SensorData_msg
#define ControlCommand_fields &ControlCommand_msg
#define SystemMessage_fields &SystemMessage_msg

/* Maximum encoded size of messages (where known) */
#define ControlCommand_size                      11
#define SensorData_size                          21
#define SystemMessage_size                       23
#define TEST_PB_H_MAX_SIZE                       SystemMessage_size

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
