// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: config.proto
// Protobuf C++ Version: 5.29.3

#include "config.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace config {

inline constexpr UniverseNode_Light::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : channels_{},
        _channels_cached_byte_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UniverseNode_Light::UniverseNode_Light(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UniverseNode_LightDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UniverseNode_LightDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UniverseNode_LightDefaultTypeInternal() {}
  union {
    UniverseNode_Light _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UniverseNode_LightDefaultTypeInternal _UniverseNode_Light_default_instance_;

inline constexpr SubtractorNode::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : saturating_{false},
        inputs_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SubtractorNode::SubtractorNode(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubtractorNodeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubtractorNodeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubtractorNodeDefaultTypeInternal() {}
  union {
    SubtractorNode _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubtractorNodeDefaultTypeInternal _SubtractorNode_default_instance_;

inline constexpr MultiplierNode::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : saturating_{false},
        inputs_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MultiplierNode::MultiplierNode(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MultiplierNodeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MultiplierNodeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MultiplierNodeDefaultTypeInternal() {}
  union {
    MultiplierNode _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MultiplierNodeDefaultTypeInternal _MultiplierNode_default_instance_;

inline constexpr DividerNode::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : saturating_{false},
        inputs_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DividerNode::DividerNode(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DividerNodeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DividerNodeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DividerNodeDefaultTypeInternal() {}
  union {
    DividerNode _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DividerNodeDefaultTypeInternal _DividerNode_default_instance_;

inline constexpr ConstantNode::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : values_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ConstantNode::ConstantNode(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ConstantNodeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConstantNodeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConstantNodeDefaultTypeInternal() {}
  union {
    ConstantNode _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConstantNodeDefaultTypeInternal _ConstantNode_default_instance_;

inline constexpr Connection::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : from_node_{0u},
        from_output_{0u},
        to_node_{0u},
        to_input_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Connection::Connection(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ConnectionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConnectionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConnectionDefaultTypeInternal() {}
  union {
    Connection _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConnectionDefaultTypeInternal _Connection_default_instance_;

inline constexpr AdderNode::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : saturating_{false},
        inputs_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AdderNode::AdderNode(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AdderNodeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AdderNodeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AdderNodeDefaultTypeInternal() {}
  union {
    AdderNode _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AdderNodeDefaultTypeInternal _AdderNode_default_instance_;

inline constexpr UniverseNode::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : lights_{},
        max_channel_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UniverseNode::UniverseNode(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UniverseNodeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UniverseNodeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UniverseNodeDefaultTypeInternal() {}
  union {
    UniverseNode _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UniverseNodeDefaultTypeInternal _UniverseNode_default_instance_;

inline constexpr Node::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        config_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Node::Node(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NodeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeDefaultTypeInternal() {}
  union {
    Node _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeDefaultTypeInternal _Node_default_instance_;

inline constexpr Runner::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : nodes_{},
        connections_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Runner::Runner(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RunnerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RunnerDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RunnerDefaultTypeInternal() {}
  union {
    Runner _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RunnerDefaultTypeInternal _Runner_default_instance_;
}  // namespace config
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_config_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_config_2eproto = nullptr;
const ::uint32_t
    TableStruct_config_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::config::ConstantNode, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::config::ConstantNode, _impl_.values_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::config::AdderNode, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::config::AdderNode, _impl_.saturating_),
        PROTOBUF_FIELD_OFFSET(::config::AdderNode, _impl_.inputs_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::config::SubtractorNode, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::config::SubtractorNode, _impl_.saturating_),
        PROTOBUF_FIELD_OFFSET(::config::SubtractorNode, _impl_.inputs_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::config::MultiplierNode, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::config::MultiplierNode, _impl_.saturating_),
        PROTOBUF_FIELD_OFFSET(::config::MultiplierNode, _impl_.inputs_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::config::DividerNode, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::config::DividerNode, _impl_.saturating_),
        PROTOBUF_FIELD_OFFSET(::config::DividerNode, _impl_.inputs_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::config::UniverseNode_Light, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::config::UniverseNode_Light, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::config::UniverseNode_Light, _impl_.channels_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::config::UniverseNode, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::config::UniverseNode, _impl_.lights_),
        PROTOBUF_FIELD_OFFSET(::config::UniverseNode, _impl_.max_channel_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::config::Node, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::config::Node, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::config::Node, _impl_.name_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::config::Node, _impl_.config_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::config::Connection, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::config::Connection, _impl_.from_node_),
        PROTOBUF_FIELD_OFFSET(::config::Connection, _impl_.from_output_),
        PROTOBUF_FIELD_OFFSET(::config::Connection, _impl_.to_node_),
        PROTOBUF_FIELD_OFFSET(::config::Connection, _impl_.to_input_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::config::Runner, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::config::Runner, _impl_.nodes_),
        PROTOBUF_FIELD_OFFSET(::config::Runner, _impl_.connections_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::config::ConstantNode)},
        {9, -1, -1, sizeof(::config::AdderNode)},
        {19, -1, -1, sizeof(::config::SubtractorNode)},
        {29, -1, -1, sizeof(::config::MultiplierNode)},
        {39, -1, -1, sizeof(::config::DividerNode)},
        {49, -1, -1, sizeof(::config::UniverseNode_Light)},
        {59, -1, -1, sizeof(::config::UniverseNode)},
        {69, -1, -1, sizeof(::config::Node)},
        {85, -1, -1, sizeof(::config::Connection)},
        {97, -1, -1, sizeof(::config::Runner)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::config::_ConstantNode_default_instance_._instance,
    &::config::_AdderNode_default_instance_._instance,
    &::config::_SubtractorNode_default_instance_._instance,
    &::config::_MultiplierNode_default_instance_._instance,
    &::config::_DividerNode_default_instance_._instance,
    &::config::_UniverseNode_Light_default_instance_._instance,
    &::config::_UniverseNode_default_instance_._instance,
    &::config::_Node_default_instance_._instance,
    &::config::_Connection_default_instance_._instance,
    &::config::_Runner_default_instance_._instance,
};
const char descriptor_table_protodef_config_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\014config.proto\022\006config\"\036\n\014ConstantNode\022\016"
    "\n\006values\030\001 \003(\002\"/\n\tAdderNode\022\022\n\nsaturatin"
    "g\030\001 \001(\010\022\016\n\006inputs\030\002 \001(\r\"4\n\016SubtractorNod"
    "e\022\022\n\nsaturating\030\001 \001(\010\022\016\n\006inputs\030\002 \001(\r\"4\n"
    "\016MultiplierNode\022\022\n\nsaturating\030\001 \001(\010\022\016\n\006i"
    "nputs\030\002 \001(\r\"1\n\013DividerNode\022\022\n\nsaturating"
    "\030\001 \001(\010\022\016\n\006inputs\030\002 \001(\r\"x\n\014UniverseNode\022*"
    "\n\006lights\030\001 \003(\0132\032.config.UniverseNode.Lig"
    "ht\022\023\n\013max_channel\030\002 \001(\r\032\'\n\005Light\022\014\n\004name"
    "\030\001 \001(\t\022\020\n\010channels\030\002 \003(\r\"\270\002\n\004Node\022\014\n\004nam"
    "e\030\001 \001(\t\022-\n\rconstant_node\030\002 \001(\0132\024.config."
    "ConstantNodeH\000\022\'\n\nadder_node\030\003 \001(\0132\021.con"
    "fig.AdderNodeH\000\0221\n\017subtractor_node\030\004 \001(\013"
    "2\026.config.SubtractorNodeH\000\0221\n\017multiplier"
    "_node\030\005 \001(\0132\026.config.MultiplierNodeH\000\022+\n"
    "\014divider_node\030\006 \001(\0132\023.config.DividerNode"
    "H\000\022-\n\runiverse_node\030\007 \001(\0132\024.config.Unive"
    "rseNodeH\000B\010\n\006config\"W\n\nConnection\022\021\n\tfro"
    "m_node\030\001 \001(\r\022\023\n\013from_output\030\002 \001(\r\022\017\n\007to_"
    "node\030\003 \001(\r\022\020\n\010to_input\030\004 \001(\r\"N\n\006Runner\022\033"
    "\n\005nodes\030\001 \003(\0132\014.config.Node\022\'\n\013connectio"
    "ns\030\002 \003(\0132\022.config.Connectionb\006proto3"
};
static ::absl::once_flag descriptor_table_config_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_config_2eproto = {
    false,
    false,
    876,
    descriptor_table_protodef_config_2eproto,
    "config.proto",
    &descriptor_table_config_2eproto_once,
    nullptr,
    0,
    10,
    schemas,
    file_default_instances,
    TableStruct_config_2eproto::offsets,
    file_level_enum_descriptors_config_2eproto,
    file_level_service_descriptors_config_2eproto,
};
namespace config {
// ===================================================================

class ConstantNode::_Internal {
 public:
};

ConstantNode::ConstantNode(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:config.ConstantNode)
}
inline PROTOBUF_NDEBUG_INLINE ConstantNode::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::config::ConstantNode& from_msg)
      : values_{visibility, arena, from.values_},
        _cached_size_{0} {}

ConstantNode::ConstantNode(
    ::google::protobuf::Arena* arena,
    const ConstantNode& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ConstantNode* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:config.ConstantNode)
}
inline PROTOBUF_NDEBUG_INLINE ConstantNode::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : values_{visibility, arena},
        _cached_size_{0} {}

inline void ConstantNode::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ConstantNode::~ConstantNode() {
  // @@protoc_insertion_point(destructor:config.ConstantNode)
  SharedDtor(*this);
}
inline void ConstantNode::SharedDtor(MessageLite& self) {
  ConstantNode& this_ = static_cast<ConstantNode&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ConstantNode::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ConstantNode(arena);
}
constexpr auto ConstantNode::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ConstantNode, _impl_.values_) +
          decltype(ConstantNode::_impl_.values_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ConstantNode), alignof(ConstantNode), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ConstantNode::PlacementNew_,
                                 sizeof(ConstantNode),
                                 alignof(ConstantNode));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ConstantNode::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ConstantNode_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ConstantNode::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ConstantNode>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ConstantNode::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ConstantNode>(), &ConstantNode::ByteSizeLong,
            &ConstantNode::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ConstantNode, _impl_._cached_size_),
        false,
    },
    &ConstantNode::kDescriptorMethods,
    &descriptor_table_config_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ConstantNode::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ConstantNode::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::config::ConstantNode>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated float values = 1;
    {::_pbi::TcParser::FastF32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ConstantNode, _impl_.values_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated float values = 1;
    {PROTOBUF_FIELD_OFFSET(ConstantNode, _impl_.values_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void ConstantNode::Clear() {
// @@protoc_insertion_point(message_clear_start:config.ConstantNode)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.values_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ConstantNode::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ConstantNode& this_ = static_cast<const ConstantNode&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ConstantNode::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ConstantNode& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:config.ConstantNode)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated float values = 1;
          if (this_._internal_values_size() > 0) {
            target = stream->WriteFixedPacked(1, this_._internal_values(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:config.ConstantNode)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ConstantNode::ByteSizeLong(const MessageLite& base) {
          const ConstantNode& this_ = static_cast<const ConstantNode&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ConstantNode::ByteSizeLong() const {
          const ConstantNode& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:config.ConstantNode)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated float values = 1;
            {
              std::size_t data_size = std::size_t{4} *
                  ::_pbi::FromIntSize(this_._internal_values_size());
              std::size_t tag_size = data_size == 0
                  ? 0
                  : 1 + ::_pbi::WireFormatLite::Int32Size(
                                      static_cast<int32_t>(data_size));
              total_size += tag_size + data_size;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ConstantNode::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ConstantNode*>(&to_msg);
  auto& from = static_cast<const ConstantNode&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:config.ConstantNode)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_values()->MergeFrom(from._internal_values());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ConstantNode::CopyFrom(const ConstantNode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:config.ConstantNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ConstantNode::InternalSwap(ConstantNode* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.values_.InternalSwap(&other->_impl_.values_);
}

::google::protobuf::Metadata ConstantNode::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AdderNode::_Internal {
 public:
};

AdderNode::AdderNode(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:config.AdderNode)
}
AdderNode::AdderNode(
    ::google::protobuf::Arena* arena, const AdderNode& from)
    : AdderNode(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AdderNode::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AdderNode::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, saturating_),
           0,
           offsetof(Impl_, inputs_) -
               offsetof(Impl_, saturating_) +
               sizeof(Impl_::inputs_));
}
AdderNode::~AdderNode() {
  // @@protoc_insertion_point(destructor:config.AdderNode)
  SharedDtor(*this);
}
inline void AdderNode::SharedDtor(MessageLite& self) {
  AdderNode& this_ = static_cast<AdderNode&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* AdderNode::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AdderNode(arena);
}
constexpr auto AdderNode::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AdderNode),
                                            alignof(AdderNode));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AdderNode::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AdderNode_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AdderNode::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AdderNode>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AdderNode::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AdderNode>(), &AdderNode::ByteSizeLong,
            &AdderNode::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AdderNode, _impl_._cached_size_),
        false,
    },
    &AdderNode::kDescriptorMethods,
    &descriptor_table_config_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AdderNode::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> AdderNode::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::config::AdderNode>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 inputs = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AdderNode, _impl_.inputs_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(AdderNode, _impl_.inputs_)}},
    // bool saturating = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AdderNode, _impl_.saturating_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AdderNode, _impl_.saturating_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool saturating = 1;
    {PROTOBUF_FIELD_OFFSET(AdderNode, _impl_.saturating_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // uint32 inputs = 2;
    {PROTOBUF_FIELD_OFFSET(AdderNode, _impl_.inputs_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void AdderNode::Clear() {
// @@protoc_insertion_point(message_clear_start:config.AdderNode)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.saturating_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.inputs_) -
      reinterpret_cast<char*>(&_impl_.saturating_)) + sizeof(_impl_.inputs_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AdderNode::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AdderNode& this_ = static_cast<const AdderNode&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AdderNode::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AdderNode& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:config.AdderNode)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool saturating = 1;
          if (this_._internal_saturating() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_saturating(), target);
          }

          // uint32 inputs = 2;
          if (this_._internal_inputs() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_inputs(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:config.AdderNode)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AdderNode::ByteSizeLong(const MessageLite& base) {
          const AdderNode& this_ = static_cast<const AdderNode&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AdderNode::ByteSizeLong() const {
          const AdderNode& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:config.AdderNode)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bool saturating = 1;
            if (this_._internal_saturating() != 0) {
              total_size += 2;
            }
            // uint32 inputs = 2;
            if (this_._internal_inputs() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_inputs());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AdderNode::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AdderNode*>(&to_msg);
  auto& from = static_cast<const AdderNode&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:config.AdderNode)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_saturating() != 0) {
    _this->_impl_.saturating_ = from._impl_.saturating_;
  }
  if (from._internal_inputs() != 0) {
    _this->_impl_.inputs_ = from._impl_.inputs_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AdderNode::CopyFrom(const AdderNode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:config.AdderNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AdderNode::InternalSwap(AdderNode* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AdderNode, _impl_.inputs_)
      + sizeof(AdderNode::_impl_.inputs_)
      - PROTOBUF_FIELD_OFFSET(AdderNode, _impl_.saturating_)>(
          reinterpret_cast<char*>(&_impl_.saturating_),
          reinterpret_cast<char*>(&other->_impl_.saturating_));
}

::google::protobuf::Metadata AdderNode::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubtractorNode::_Internal {
 public:
};

SubtractorNode::SubtractorNode(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:config.SubtractorNode)
}
SubtractorNode::SubtractorNode(
    ::google::protobuf::Arena* arena, const SubtractorNode& from)
    : SubtractorNode(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SubtractorNode::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SubtractorNode::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, saturating_),
           0,
           offsetof(Impl_, inputs_) -
               offsetof(Impl_, saturating_) +
               sizeof(Impl_::inputs_));
}
SubtractorNode::~SubtractorNode() {
  // @@protoc_insertion_point(destructor:config.SubtractorNode)
  SharedDtor(*this);
}
inline void SubtractorNode::SharedDtor(MessageLite& self) {
  SubtractorNode& this_ = static_cast<SubtractorNode&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SubtractorNode::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubtractorNode(arena);
}
constexpr auto SubtractorNode::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubtractorNode),
                                            alignof(SubtractorNode));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubtractorNode::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubtractorNode_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubtractorNode::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SubtractorNode>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubtractorNode::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SubtractorNode>(), &SubtractorNode::ByteSizeLong,
            &SubtractorNode::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubtractorNode, _impl_._cached_size_),
        false,
    },
    &SubtractorNode::kDescriptorMethods,
    &descriptor_table_config_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubtractorNode::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> SubtractorNode::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::config::SubtractorNode>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 inputs = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SubtractorNode, _impl_.inputs_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SubtractorNode, _impl_.inputs_)}},
    // bool saturating = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SubtractorNode, _impl_.saturating_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SubtractorNode, _impl_.saturating_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool saturating = 1;
    {PROTOBUF_FIELD_OFFSET(SubtractorNode, _impl_.saturating_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // uint32 inputs = 2;
    {PROTOBUF_FIELD_OFFSET(SubtractorNode, _impl_.inputs_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SubtractorNode::Clear() {
// @@protoc_insertion_point(message_clear_start:config.SubtractorNode)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.saturating_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.inputs_) -
      reinterpret_cast<char*>(&_impl_.saturating_)) + sizeof(_impl_.inputs_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SubtractorNode::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SubtractorNode& this_ = static_cast<const SubtractorNode&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SubtractorNode::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SubtractorNode& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:config.SubtractorNode)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool saturating = 1;
          if (this_._internal_saturating() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_saturating(), target);
          }

          // uint32 inputs = 2;
          if (this_._internal_inputs() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_inputs(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:config.SubtractorNode)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SubtractorNode::ByteSizeLong(const MessageLite& base) {
          const SubtractorNode& this_ = static_cast<const SubtractorNode&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SubtractorNode::ByteSizeLong() const {
          const SubtractorNode& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:config.SubtractorNode)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bool saturating = 1;
            if (this_._internal_saturating() != 0) {
              total_size += 2;
            }
            // uint32 inputs = 2;
            if (this_._internal_inputs() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_inputs());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SubtractorNode::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubtractorNode*>(&to_msg);
  auto& from = static_cast<const SubtractorNode&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:config.SubtractorNode)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_saturating() != 0) {
    _this->_impl_.saturating_ = from._impl_.saturating_;
  }
  if (from._internal_inputs() != 0) {
    _this->_impl_.inputs_ = from._impl_.inputs_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubtractorNode::CopyFrom(const SubtractorNode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:config.SubtractorNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubtractorNode::InternalSwap(SubtractorNode* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SubtractorNode, _impl_.inputs_)
      + sizeof(SubtractorNode::_impl_.inputs_)
      - PROTOBUF_FIELD_OFFSET(SubtractorNode, _impl_.saturating_)>(
          reinterpret_cast<char*>(&_impl_.saturating_),
          reinterpret_cast<char*>(&other->_impl_.saturating_));
}

::google::protobuf::Metadata SubtractorNode::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MultiplierNode::_Internal {
 public:
};

MultiplierNode::MultiplierNode(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:config.MultiplierNode)
}
MultiplierNode::MultiplierNode(
    ::google::protobuf::Arena* arena, const MultiplierNode& from)
    : MultiplierNode(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE MultiplierNode::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void MultiplierNode::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, saturating_),
           0,
           offsetof(Impl_, inputs_) -
               offsetof(Impl_, saturating_) +
               sizeof(Impl_::inputs_));
}
MultiplierNode::~MultiplierNode() {
  // @@protoc_insertion_point(destructor:config.MultiplierNode)
  SharedDtor(*this);
}
inline void MultiplierNode::SharedDtor(MessageLite& self) {
  MultiplierNode& this_ = static_cast<MultiplierNode&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* MultiplierNode::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MultiplierNode(arena);
}
constexpr auto MultiplierNode::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(MultiplierNode),
                                            alignof(MultiplierNode));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MultiplierNode::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MultiplierNode_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MultiplierNode::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MultiplierNode>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MultiplierNode::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MultiplierNode>(), &MultiplierNode::ByteSizeLong,
            &MultiplierNode::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MultiplierNode, _impl_._cached_size_),
        false,
    },
    &MultiplierNode::kDescriptorMethods,
    &descriptor_table_config_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MultiplierNode::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> MultiplierNode::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::config::MultiplierNode>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 inputs = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MultiplierNode, _impl_.inputs_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(MultiplierNode, _impl_.inputs_)}},
    // bool saturating = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(MultiplierNode, _impl_.saturating_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MultiplierNode, _impl_.saturating_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool saturating = 1;
    {PROTOBUF_FIELD_OFFSET(MultiplierNode, _impl_.saturating_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // uint32 inputs = 2;
    {PROTOBUF_FIELD_OFFSET(MultiplierNode, _impl_.inputs_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void MultiplierNode::Clear() {
// @@protoc_insertion_point(message_clear_start:config.MultiplierNode)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.saturating_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.inputs_) -
      reinterpret_cast<char*>(&_impl_.saturating_)) + sizeof(_impl_.inputs_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MultiplierNode::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MultiplierNode& this_ = static_cast<const MultiplierNode&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MultiplierNode::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MultiplierNode& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:config.MultiplierNode)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool saturating = 1;
          if (this_._internal_saturating() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_saturating(), target);
          }

          // uint32 inputs = 2;
          if (this_._internal_inputs() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_inputs(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:config.MultiplierNode)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MultiplierNode::ByteSizeLong(const MessageLite& base) {
          const MultiplierNode& this_ = static_cast<const MultiplierNode&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MultiplierNode::ByteSizeLong() const {
          const MultiplierNode& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:config.MultiplierNode)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bool saturating = 1;
            if (this_._internal_saturating() != 0) {
              total_size += 2;
            }
            // uint32 inputs = 2;
            if (this_._internal_inputs() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_inputs());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MultiplierNode::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MultiplierNode*>(&to_msg);
  auto& from = static_cast<const MultiplierNode&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:config.MultiplierNode)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_saturating() != 0) {
    _this->_impl_.saturating_ = from._impl_.saturating_;
  }
  if (from._internal_inputs() != 0) {
    _this->_impl_.inputs_ = from._impl_.inputs_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MultiplierNode::CopyFrom(const MultiplierNode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:config.MultiplierNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MultiplierNode::InternalSwap(MultiplierNode* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MultiplierNode, _impl_.inputs_)
      + sizeof(MultiplierNode::_impl_.inputs_)
      - PROTOBUF_FIELD_OFFSET(MultiplierNode, _impl_.saturating_)>(
          reinterpret_cast<char*>(&_impl_.saturating_),
          reinterpret_cast<char*>(&other->_impl_.saturating_));
}

::google::protobuf::Metadata MultiplierNode::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DividerNode::_Internal {
 public:
};

DividerNode::DividerNode(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:config.DividerNode)
}
DividerNode::DividerNode(
    ::google::protobuf::Arena* arena, const DividerNode& from)
    : DividerNode(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE DividerNode::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void DividerNode::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, saturating_),
           0,
           offsetof(Impl_, inputs_) -
               offsetof(Impl_, saturating_) +
               sizeof(Impl_::inputs_));
}
DividerNode::~DividerNode() {
  // @@protoc_insertion_point(destructor:config.DividerNode)
  SharedDtor(*this);
}
inline void DividerNode::SharedDtor(MessageLite& self) {
  DividerNode& this_ = static_cast<DividerNode&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* DividerNode::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DividerNode(arena);
}
constexpr auto DividerNode::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(DividerNode),
                                            alignof(DividerNode));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DividerNode::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DividerNode_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DividerNode::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DividerNode>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DividerNode::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DividerNode>(), &DividerNode::ByteSizeLong,
            &DividerNode::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DividerNode, _impl_._cached_size_),
        false,
    },
    &DividerNode::kDescriptorMethods,
    &descriptor_table_config_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DividerNode::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> DividerNode::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::config::DividerNode>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 inputs = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DividerNode, _impl_.inputs_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(DividerNode, _impl_.inputs_)}},
    // bool saturating = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(DividerNode, _impl_.saturating_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(DividerNode, _impl_.saturating_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool saturating = 1;
    {PROTOBUF_FIELD_OFFSET(DividerNode, _impl_.saturating_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // uint32 inputs = 2;
    {PROTOBUF_FIELD_OFFSET(DividerNode, _impl_.inputs_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void DividerNode::Clear() {
// @@protoc_insertion_point(message_clear_start:config.DividerNode)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.saturating_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.inputs_) -
      reinterpret_cast<char*>(&_impl_.saturating_)) + sizeof(_impl_.inputs_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DividerNode::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DividerNode& this_ = static_cast<const DividerNode&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DividerNode::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DividerNode& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:config.DividerNode)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool saturating = 1;
          if (this_._internal_saturating() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_saturating(), target);
          }

          // uint32 inputs = 2;
          if (this_._internal_inputs() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_inputs(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:config.DividerNode)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DividerNode::ByteSizeLong(const MessageLite& base) {
          const DividerNode& this_ = static_cast<const DividerNode&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DividerNode::ByteSizeLong() const {
          const DividerNode& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:config.DividerNode)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bool saturating = 1;
            if (this_._internal_saturating() != 0) {
              total_size += 2;
            }
            // uint32 inputs = 2;
            if (this_._internal_inputs() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_inputs());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DividerNode::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DividerNode*>(&to_msg);
  auto& from = static_cast<const DividerNode&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:config.DividerNode)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_saturating() != 0) {
    _this->_impl_.saturating_ = from._impl_.saturating_;
  }
  if (from._internal_inputs() != 0) {
    _this->_impl_.inputs_ = from._impl_.inputs_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DividerNode::CopyFrom(const DividerNode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:config.DividerNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DividerNode::InternalSwap(DividerNode* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DividerNode, _impl_.inputs_)
      + sizeof(DividerNode::_impl_.inputs_)
      - PROTOBUF_FIELD_OFFSET(DividerNode, _impl_.saturating_)>(
          reinterpret_cast<char*>(&_impl_.saturating_),
          reinterpret_cast<char*>(&other->_impl_.saturating_));
}

::google::protobuf::Metadata DividerNode::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UniverseNode_Light::_Internal {
 public:
};

UniverseNode_Light::UniverseNode_Light(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:config.UniverseNode.Light)
}
inline PROTOBUF_NDEBUG_INLINE UniverseNode_Light::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::config::UniverseNode_Light& from_msg)
      : channels_{visibility, arena, from.channels_},
        _channels_cached_byte_size_{0},
        name_(arena, from.name_),
        _cached_size_{0} {}

UniverseNode_Light::UniverseNode_Light(
    ::google::protobuf::Arena* arena,
    const UniverseNode_Light& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UniverseNode_Light* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:config.UniverseNode.Light)
}
inline PROTOBUF_NDEBUG_INLINE UniverseNode_Light::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : channels_{visibility, arena},
        _channels_cached_byte_size_{0},
        name_(arena),
        _cached_size_{0} {}

inline void UniverseNode_Light::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
UniverseNode_Light::~UniverseNode_Light() {
  // @@protoc_insertion_point(destructor:config.UniverseNode.Light)
  SharedDtor(*this);
}
inline void UniverseNode_Light::SharedDtor(MessageLite& self) {
  UniverseNode_Light& this_ = static_cast<UniverseNode_Light&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* UniverseNode_Light::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UniverseNode_Light(arena);
}
constexpr auto UniverseNode_Light::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(UniverseNode_Light, _impl_.channels_) +
          decltype(UniverseNode_Light::_impl_.channels_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(UniverseNode_Light), alignof(UniverseNode_Light), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&UniverseNode_Light::PlacementNew_,
                                 sizeof(UniverseNode_Light),
                                 alignof(UniverseNode_Light));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UniverseNode_Light::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UniverseNode_Light_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UniverseNode_Light::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UniverseNode_Light>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UniverseNode_Light::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UniverseNode_Light>(), &UniverseNode_Light::ByteSizeLong,
            &UniverseNode_Light::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UniverseNode_Light, _impl_._cached_size_),
        false,
    },
    &UniverseNode_Light::kDescriptorMethods,
    &descriptor_table_config_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UniverseNode_Light::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 38, 2> UniverseNode_Light::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::config::UniverseNode_Light>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated uint32 channels = 2;
    {::_pbi::TcParser::FastV32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(UniverseNode_Light, _impl_.channels_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UniverseNode_Light, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(UniverseNode_Light, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated uint32 channels = 2;
    {PROTOBUF_FIELD_OFFSET(UniverseNode_Light, _impl_.channels_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
  }},
  // no aux_entries
  {{
    "\31\4\0\0\0\0\0\0"
    "config.UniverseNode.Light"
    "name"
  }},
};

PROTOBUF_NOINLINE void UniverseNode_Light::Clear() {
// @@protoc_insertion_point(message_clear_start:config.UniverseNode.Light)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.channels_.Clear();
  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UniverseNode_Light::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UniverseNode_Light& this_ = static_cast<const UniverseNode_Light&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UniverseNode_Light::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UniverseNode_Light& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:config.UniverseNode.Light)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "config.UniverseNode.Light.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated uint32 channels = 2;
          {
            int byte_size = this_._impl_._channels_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteUInt32Packed(
                  2, this_._internal_channels(), byte_size, target);
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:config.UniverseNode.Light)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UniverseNode_Light::ByteSizeLong(const MessageLite& base) {
          const UniverseNode_Light& this_ = static_cast<const UniverseNode_Light&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UniverseNode_Light::ByteSizeLong() const {
          const UniverseNode_Light& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:config.UniverseNode.Light)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated uint32 channels = 2;
            {
              total_size +=
                  ::_pbi::WireFormatLite::UInt32SizeWithPackedTagSize(
                      this_._internal_channels(), 1,
                      this_._impl_._channels_cached_byte_size_);
            }
          }
           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UniverseNode_Light::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UniverseNode_Light*>(&to_msg);
  auto& from = static_cast<const UniverseNode_Light&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:config.UniverseNode.Light)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_channels()->MergeFrom(from._internal_channels());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UniverseNode_Light::CopyFrom(const UniverseNode_Light& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:config.UniverseNode.Light)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UniverseNode_Light::InternalSwap(UniverseNode_Light* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.channels_.InternalSwap(&other->_impl_.channels_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
}

::google::protobuf::Metadata UniverseNode_Light::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UniverseNode::_Internal {
 public:
};

UniverseNode::UniverseNode(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:config.UniverseNode)
}
inline PROTOBUF_NDEBUG_INLINE UniverseNode::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::config::UniverseNode& from_msg)
      : lights_{visibility, arena, from.lights_},
        _cached_size_{0} {}

UniverseNode::UniverseNode(
    ::google::protobuf::Arena* arena,
    const UniverseNode& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UniverseNode* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.max_channel_ = from._impl_.max_channel_;

  // @@protoc_insertion_point(copy_constructor:config.UniverseNode)
}
inline PROTOBUF_NDEBUG_INLINE UniverseNode::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : lights_{visibility, arena},
        _cached_size_{0} {}

inline void UniverseNode::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.max_channel_ = {};
}
UniverseNode::~UniverseNode() {
  // @@protoc_insertion_point(destructor:config.UniverseNode)
  SharedDtor(*this);
}
inline void UniverseNode::SharedDtor(MessageLite& self) {
  UniverseNode& this_ = static_cast<UniverseNode&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* UniverseNode::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UniverseNode(arena);
}
constexpr auto UniverseNode::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(UniverseNode, _impl_.lights_) +
          decltype(UniverseNode::_impl_.lights_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(UniverseNode), alignof(UniverseNode), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&UniverseNode::PlacementNew_,
                                 sizeof(UniverseNode),
                                 alignof(UniverseNode));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UniverseNode::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UniverseNode_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UniverseNode::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UniverseNode>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UniverseNode::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UniverseNode>(), &UniverseNode::ByteSizeLong,
            &UniverseNode::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UniverseNode, _impl_._cached_size_),
        false,
    },
    &UniverseNode::kDescriptorMethods,
    &descriptor_table_config_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UniverseNode::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> UniverseNode::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::config::UniverseNode>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 max_channel = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UniverseNode, _impl_.max_channel_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(UniverseNode, _impl_.max_channel_)}},
    // repeated .config.UniverseNode.Light lights = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UniverseNode, _impl_.lights_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .config.UniverseNode.Light lights = 1;
    {PROTOBUF_FIELD_OFFSET(UniverseNode, _impl_.lights_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 max_channel = 2;
    {PROTOBUF_FIELD_OFFSET(UniverseNode, _impl_.max_channel_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::config::UniverseNode_Light>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void UniverseNode::Clear() {
// @@protoc_insertion_point(message_clear_start:config.UniverseNode)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.lights_.Clear();
  _impl_.max_channel_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UniverseNode::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UniverseNode& this_ = static_cast<const UniverseNode&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UniverseNode::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UniverseNode& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:config.UniverseNode)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .config.UniverseNode.Light lights = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_lights_size());
               i < n; i++) {
            const auto& repfield = this_._internal_lights().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // uint32 max_channel = 2;
          if (this_._internal_max_channel() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_max_channel(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:config.UniverseNode)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UniverseNode::ByteSizeLong(const MessageLite& base) {
          const UniverseNode& this_ = static_cast<const UniverseNode&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UniverseNode::ByteSizeLong() const {
          const UniverseNode& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:config.UniverseNode)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .config.UniverseNode.Light lights = 1;
            {
              total_size += 1UL * this_._internal_lights_size();
              for (const auto& msg : this_._internal_lights()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // uint32 max_channel = 2;
            if (this_._internal_max_channel() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_max_channel());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UniverseNode::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UniverseNode*>(&to_msg);
  auto& from = static_cast<const UniverseNode&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:config.UniverseNode)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_lights()->MergeFrom(
      from._internal_lights());
  if (from._internal_max_channel() != 0) {
    _this->_impl_.max_channel_ = from._impl_.max_channel_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UniverseNode::CopyFrom(const UniverseNode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:config.UniverseNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UniverseNode::InternalSwap(UniverseNode* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.lights_.InternalSwap(&other->_impl_.lights_);
        swap(_impl_.max_channel_, other->_impl_.max_channel_);
}

::google::protobuf::Metadata UniverseNode::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Node::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::config::Node, _impl_._oneof_case_);
};

void Node::set_allocated_constant_node(::config::ConstantNode* constant_node) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_config();
  if (constant_node) {
    ::google::protobuf::Arena* submessage_arena = constant_node->GetArena();
    if (message_arena != submessage_arena) {
      constant_node = ::google::protobuf::internal::GetOwnedMessage(message_arena, constant_node, submessage_arena);
    }
    set_has_constant_node();
    _impl_.config_.constant_node_ = constant_node;
  }
  // @@protoc_insertion_point(field_set_allocated:config.Node.constant_node)
}
void Node::set_allocated_adder_node(::config::AdderNode* adder_node) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_config();
  if (adder_node) {
    ::google::protobuf::Arena* submessage_arena = adder_node->GetArena();
    if (message_arena != submessage_arena) {
      adder_node = ::google::protobuf::internal::GetOwnedMessage(message_arena, adder_node, submessage_arena);
    }
    set_has_adder_node();
    _impl_.config_.adder_node_ = adder_node;
  }
  // @@protoc_insertion_point(field_set_allocated:config.Node.adder_node)
}
void Node::set_allocated_subtractor_node(::config::SubtractorNode* subtractor_node) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_config();
  if (subtractor_node) {
    ::google::protobuf::Arena* submessage_arena = subtractor_node->GetArena();
    if (message_arena != submessage_arena) {
      subtractor_node = ::google::protobuf::internal::GetOwnedMessage(message_arena, subtractor_node, submessage_arena);
    }
    set_has_subtractor_node();
    _impl_.config_.subtractor_node_ = subtractor_node;
  }
  // @@protoc_insertion_point(field_set_allocated:config.Node.subtractor_node)
}
void Node::set_allocated_multiplier_node(::config::MultiplierNode* multiplier_node) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_config();
  if (multiplier_node) {
    ::google::protobuf::Arena* submessage_arena = multiplier_node->GetArena();
    if (message_arena != submessage_arena) {
      multiplier_node = ::google::protobuf::internal::GetOwnedMessage(message_arena, multiplier_node, submessage_arena);
    }
    set_has_multiplier_node();
    _impl_.config_.multiplier_node_ = multiplier_node;
  }
  // @@protoc_insertion_point(field_set_allocated:config.Node.multiplier_node)
}
void Node::set_allocated_divider_node(::config::DividerNode* divider_node) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_config();
  if (divider_node) {
    ::google::protobuf::Arena* submessage_arena = divider_node->GetArena();
    if (message_arena != submessage_arena) {
      divider_node = ::google::protobuf::internal::GetOwnedMessage(message_arena, divider_node, submessage_arena);
    }
    set_has_divider_node();
    _impl_.config_.divider_node_ = divider_node;
  }
  // @@protoc_insertion_point(field_set_allocated:config.Node.divider_node)
}
void Node::set_allocated_universe_node(::config::UniverseNode* universe_node) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_config();
  if (universe_node) {
    ::google::protobuf::Arena* submessage_arena = universe_node->GetArena();
    if (message_arena != submessage_arena) {
      universe_node = ::google::protobuf::internal::GetOwnedMessage(message_arena, universe_node, submessage_arena);
    }
    set_has_universe_node();
    _impl_.config_.universe_node_ = universe_node;
  }
  // @@protoc_insertion_point(field_set_allocated:config.Node.universe_node)
}
Node::Node(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:config.Node)
}
inline PROTOBUF_NDEBUG_INLINE Node::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::config::Node& from_msg)
      : name_(arena, from.name_),
        config_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Node::Node(
    ::google::protobuf::Arena* arena,
    const Node& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Node* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (config_case()) {
    case CONFIG_NOT_SET:
      break;
      case kConstantNode:
        _impl_.config_.constant_node_ = ::google::protobuf::Message::CopyConstruct<::config::ConstantNode>(arena, *from._impl_.config_.constant_node_);
        break;
      case kAdderNode:
        _impl_.config_.adder_node_ = ::google::protobuf::Message::CopyConstruct<::config::AdderNode>(arena, *from._impl_.config_.adder_node_);
        break;
      case kSubtractorNode:
        _impl_.config_.subtractor_node_ = ::google::protobuf::Message::CopyConstruct<::config::SubtractorNode>(arena, *from._impl_.config_.subtractor_node_);
        break;
      case kMultiplierNode:
        _impl_.config_.multiplier_node_ = ::google::protobuf::Message::CopyConstruct<::config::MultiplierNode>(arena, *from._impl_.config_.multiplier_node_);
        break;
      case kDividerNode:
        _impl_.config_.divider_node_ = ::google::protobuf::Message::CopyConstruct<::config::DividerNode>(arena, *from._impl_.config_.divider_node_);
        break;
      case kUniverseNode:
        _impl_.config_.universe_node_ = ::google::protobuf::Message::CopyConstruct<::config::UniverseNode>(arena, *from._impl_.config_.universe_node_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:config.Node)
}
inline PROTOBUF_NDEBUG_INLINE Node::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        config_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Node::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Node::~Node() {
  // @@protoc_insertion_point(destructor:config.Node)
  SharedDtor(*this);
}
inline void Node::SharedDtor(MessageLite& self) {
  Node& this_ = static_cast<Node&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  if (this_.has_config()) {
    this_.clear_config();
  }
  this_._impl_.~Impl_();
}

void Node::clear_config() {
// @@protoc_insertion_point(one_of_clear_start:config.Node)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (config_case()) {
    case kConstantNode: {
      if (GetArena() == nullptr) {
        delete _impl_.config_.constant_node_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.config_.constant_node_);
      }
      break;
    }
    case kAdderNode: {
      if (GetArena() == nullptr) {
        delete _impl_.config_.adder_node_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.config_.adder_node_);
      }
      break;
    }
    case kSubtractorNode: {
      if (GetArena() == nullptr) {
        delete _impl_.config_.subtractor_node_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.config_.subtractor_node_);
      }
      break;
    }
    case kMultiplierNode: {
      if (GetArena() == nullptr) {
        delete _impl_.config_.multiplier_node_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.config_.multiplier_node_);
      }
      break;
    }
    case kDividerNode: {
      if (GetArena() == nullptr) {
        delete _impl_.config_.divider_node_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.config_.divider_node_);
      }
      break;
    }
    case kUniverseNode: {
      if (GetArena() == nullptr) {
        delete _impl_.config_.universe_node_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.config_.universe_node_);
      }
      break;
    }
    case CONFIG_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = CONFIG_NOT_SET;
}


inline void* Node::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Node(arena);
}
constexpr auto Node::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Node),
                                            alignof(Node));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Node::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Node_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Node::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Node>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Node::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Node>(), &Node::ByteSizeLong,
            &Node::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Node, _impl_._cached_size_),
        false,
    },
    &Node::kDescriptorMethods,
    &descriptor_table_config_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Node::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 7, 6, 24, 2> Node::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::config::Node>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Node, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(Node, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .config.ConstantNode constant_node = 2;
    {PROTOBUF_FIELD_OFFSET(Node, _impl_.config_.constant_node_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .config.AdderNode adder_node = 3;
    {PROTOBUF_FIELD_OFFSET(Node, _impl_.config_.adder_node_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .config.SubtractorNode subtractor_node = 4;
    {PROTOBUF_FIELD_OFFSET(Node, _impl_.config_.subtractor_node_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .config.MultiplierNode multiplier_node = 5;
    {PROTOBUF_FIELD_OFFSET(Node, _impl_.config_.multiplier_node_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .config.DividerNode divider_node = 6;
    {PROTOBUF_FIELD_OFFSET(Node, _impl_.config_.divider_node_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .config.UniverseNode universe_node = 7;
    {PROTOBUF_FIELD_OFFSET(Node, _impl_.config_.universe_node_), _Internal::kOneofCaseOffset + 0, 5,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::config::ConstantNode>()},
    {::_pbi::TcParser::GetTable<::config::AdderNode>()},
    {::_pbi::TcParser::GetTable<::config::SubtractorNode>()},
    {::_pbi::TcParser::GetTable<::config::MultiplierNode>()},
    {::_pbi::TcParser::GetTable<::config::DividerNode>()},
    {::_pbi::TcParser::GetTable<::config::UniverseNode>()},
  }}, {{
    "\13\4\0\0\0\0\0\0"
    "config.Node"
    "name"
  }},
};

PROTOBUF_NOINLINE void Node::Clear() {
// @@protoc_insertion_point(message_clear_start:config.Node)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  clear_config();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Node::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Node& this_ = static_cast<const Node&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Node::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Node& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:config.Node)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "config.Node.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          switch (this_.config_case()) {
            case kConstantNode: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  2, *this_._impl_.config_.constant_node_, this_._impl_.config_.constant_node_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kAdderNode: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  3, *this_._impl_.config_.adder_node_, this_._impl_.config_.adder_node_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kSubtractorNode: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  4, *this_._impl_.config_.subtractor_node_, this_._impl_.config_.subtractor_node_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kMultiplierNode: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  5, *this_._impl_.config_.multiplier_node_, this_._impl_.config_.multiplier_node_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kDividerNode: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  6, *this_._impl_.config_.divider_node_, this_._impl_.config_.divider_node_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kUniverseNode: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  7, *this_._impl_.config_.universe_node_, this_._impl_.config_.universe_node_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:config.Node)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Node::ByteSizeLong(const MessageLite& base) {
          const Node& this_ = static_cast<const Node&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Node::ByteSizeLong() const {
          const Node& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:config.Node)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
          }
          switch (this_.config_case()) {
            // .config.ConstantNode constant_node = 2;
            case kConstantNode: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.config_.constant_node_);
              break;
            }
            // .config.AdderNode adder_node = 3;
            case kAdderNode: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.config_.adder_node_);
              break;
            }
            // .config.SubtractorNode subtractor_node = 4;
            case kSubtractorNode: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.config_.subtractor_node_);
              break;
            }
            // .config.MultiplierNode multiplier_node = 5;
            case kMultiplierNode: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.config_.multiplier_node_);
              break;
            }
            // .config.DividerNode divider_node = 6;
            case kDividerNode: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.config_.divider_node_);
              break;
            }
            // .config.UniverseNode universe_node = 7;
            case kUniverseNode: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.config_.universe_node_);
              break;
            }
            case CONFIG_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Node::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Node*>(&to_msg);
  auto& from = static_cast<const Node&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:config.Node)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_config();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kConstantNode: {
        if (oneof_needs_init) {
          _this->_impl_.config_.constant_node_ =
              ::google::protobuf::Message::CopyConstruct<::config::ConstantNode>(arena, *from._impl_.config_.constant_node_);
        } else {
          _this->_impl_.config_.constant_node_->MergeFrom(from._internal_constant_node());
        }
        break;
      }
      case kAdderNode: {
        if (oneof_needs_init) {
          _this->_impl_.config_.adder_node_ =
              ::google::protobuf::Message::CopyConstruct<::config::AdderNode>(arena, *from._impl_.config_.adder_node_);
        } else {
          _this->_impl_.config_.adder_node_->MergeFrom(from._internal_adder_node());
        }
        break;
      }
      case kSubtractorNode: {
        if (oneof_needs_init) {
          _this->_impl_.config_.subtractor_node_ =
              ::google::protobuf::Message::CopyConstruct<::config::SubtractorNode>(arena, *from._impl_.config_.subtractor_node_);
        } else {
          _this->_impl_.config_.subtractor_node_->MergeFrom(from._internal_subtractor_node());
        }
        break;
      }
      case kMultiplierNode: {
        if (oneof_needs_init) {
          _this->_impl_.config_.multiplier_node_ =
              ::google::protobuf::Message::CopyConstruct<::config::MultiplierNode>(arena, *from._impl_.config_.multiplier_node_);
        } else {
          _this->_impl_.config_.multiplier_node_->MergeFrom(from._internal_multiplier_node());
        }
        break;
      }
      case kDividerNode: {
        if (oneof_needs_init) {
          _this->_impl_.config_.divider_node_ =
              ::google::protobuf::Message::CopyConstruct<::config::DividerNode>(arena, *from._impl_.config_.divider_node_);
        } else {
          _this->_impl_.config_.divider_node_->MergeFrom(from._internal_divider_node());
        }
        break;
      }
      case kUniverseNode: {
        if (oneof_needs_init) {
          _this->_impl_.config_.universe_node_ =
              ::google::protobuf::Message::CopyConstruct<::config::UniverseNode>(arena, *from._impl_.config_.universe_node_);
        } else {
          _this->_impl_.config_.universe_node_->MergeFrom(from._internal_universe_node());
        }
        break;
      }
      case CONFIG_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Node::CopyFrom(const Node& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:config.Node)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Node::InternalSwap(Node* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  swap(_impl_.config_, other->_impl_.config_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Node::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Connection::_Internal {
 public:
};

Connection::Connection(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:config.Connection)
}
Connection::Connection(
    ::google::protobuf::Arena* arena, const Connection& from)
    : Connection(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Connection::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Connection::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, from_node_),
           0,
           offsetof(Impl_, to_input_) -
               offsetof(Impl_, from_node_) +
               sizeof(Impl_::to_input_));
}
Connection::~Connection() {
  // @@protoc_insertion_point(destructor:config.Connection)
  SharedDtor(*this);
}
inline void Connection::SharedDtor(MessageLite& self) {
  Connection& this_ = static_cast<Connection&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Connection::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Connection(arena);
}
constexpr auto Connection::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Connection),
                                            alignof(Connection));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Connection::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Connection_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Connection::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Connection>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Connection::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Connection>(), &Connection::ByteSizeLong,
            &Connection::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Connection, _impl_._cached_size_),
        false,
    },
    &Connection::kDescriptorMethods,
    &descriptor_table_config_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Connection::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> Connection::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::config::Connection>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 to_input = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Connection, _impl_.to_input_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Connection, _impl_.to_input_)}},
    // uint32 from_node = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Connection, _impl_.from_node_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Connection, _impl_.from_node_)}},
    // uint32 from_output = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Connection, _impl_.from_output_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Connection, _impl_.from_output_)}},
    // uint32 to_node = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Connection, _impl_.to_node_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Connection, _impl_.to_node_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 from_node = 1;
    {PROTOBUF_FIELD_OFFSET(Connection, _impl_.from_node_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 from_output = 2;
    {PROTOBUF_FIELD_OFFSET(Connection, _impl_.from_output_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 to_node = 3;
    {PROTOBUF_FIELD_OFFSET(Connection, _impl_.to_node_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 to_input = 4;
    {PROTOBUF_FIELD_OFFSET(Connection, _impl_.to_input_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Connection::Clear() {
// @@protoc_insertion_point(message_clear_start:config.Connection)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.from_node_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.to_input_) -
      reinterpret_cast<char*>(&_impl_.from_node_)) + sizeof(_impl_.to_input_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Connection::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Connection& this_ = static_cast<const Connection&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Connection::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Connection& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:config.Connection)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 from_node = 1;
          if (this_._internal_from_node() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_from_node(), target);
          }

          // uint32 from_output = 2;
          if (this_._internal_from_output() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_from_output(), target);
          }

          // uint32 to_node = 3;
          if (this_._internal_to_node() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_to_node(), target);
          }

          // uint32 to_input = 4;
          if (this_._internal_to_input() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                4, this_._internal_to_input(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:config.Connection)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Connection::ByteSizeLong(const MessageLite& base) {
          const Connection& this_ = static_cast<const Connection&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Connection::ByteSizeLong() const {
          const Connection& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:config.Connection)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // uint32 from_node = 1;
            if (this_._internal_from_node() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_from_node());
            }
            // uint32 from_output = 2;
            if (this_._internal_from_output() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_from_output());
            }
            // uint32 to_node = 3;
            if (this_._internal_to_node() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_to_node());
            }
            // uint32 to_input = 4;
            if (this_._internal_to_input() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_to_input());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Connection::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Connection*>(&to_msg);
  auto& from = static_cast<const Connection&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:config.Connection)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_from_node() != 0) {
    _this->_impl_.from_node_ = from._impl_.from_node_;
  }
  if (from._internal_from_output() != 0) {
    _this->_impl_.from_output_ = from._impl_.from_output_;
  }
  if (from._internal_to_node() != 0) {
    _this->_impl_.to_node_ = from._impl_.to_node_;
  }
  if (from._internal_to_input() != 0) {
    _this->_impl_.to_input_ = from._impl_.to_input_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Connection::CopyFrom(const Connection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:config.Connection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Connection::InternalSwap(Connection* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Connection, _impl_.to_input_)
      + sizeof(Connection::_impl_.to_input_)
      - PROTOBUF_FIELD_OFFSET(Connection, _impl_.from_node_)>(
          reinterpret_cast<char*>(&_impl_.from_node_),
          reinterpret_cast<char*>(&other->_impl_.from_node_));
}

::google::protobuf::Metadata Connection::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Runner::_Internal {
 public:
};

Runner::Runner(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:config.Runner)
}
inline PROTOBUF_NDEBUG_INLINE Runner::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::config::Runner& from_msg)
      : nodes_{visibility, arena, from.nodes_},
        connections_{visibility, arena, from.connections_},
        _cached_size_{0} {}

Runner::Runner(
    ::google::protobuf::Arena* arena,
    const Runner& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Runner* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:config.Runner)
}
inline PROTOBUF_NDEBUG_INLINE Runner::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : nodes_{visibility, arena},
        connections_{visibility, arena},
        _cached_size_{0} {}

inline void Runner::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Runner::~Runner() {
  // @@protoc_insertion_point(destructor:config.Runner)
  SharedDtor(*this);
}
inline void Runner::SharedDtor(MessageLite& self) {
  Runner& this_ = static_cast<Runner&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Runner::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Runner(arena);
}
constexpr auto Runner::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Runner, _impl_.nodes_) +
          decltype(Runner::_impl_.nodes_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Runner, _impl_.connections_) +
          decltype(Runner::_impl_.connections_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(Runner), alignof(Runner), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Runner::PlacementNew_,
                                 sizeof(Runner),
                                 alignof(Runner));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Runner::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Runner_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Runner::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Runner>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Runner::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Runner>(), &Runner::ByteSizeLong,
            &Runner::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Runner, _impl_._cached_size_),
        false,
    },
    &Runner::kDescriptorMethods,
    &descriptor_table_config_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Runner::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> Runner::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::config::Runner>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .config.Connection connections = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(Runner, _impl_.connections_)}},
    // repeated .config.Node nodes = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Runner, _impl_.nodes_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .config.Node nodes = 1;
    {PROTOBUF_FIELD_OFFSET(Runner, _impl_.nodes_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .config.Connection connections = 2;
    {PROTOBUF_FIELD_OFFSET(Runner, _impl_.connections_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::config::Node>()},
    {::_pbi::TcParser::GetTable<::config::Connection>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Runner::Clear() {
// @@protoc_insertion_point(message_clear_start:config.Runner)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.nodes_.Clear();
  _impl_.connections_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Runner::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Runner& this_ = static_cast<const Runner&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Runner::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Runner& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:config.Runner)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .config.Node nodes = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_nodes_size());
               i < n; i++) {
            const auto& repfield = this_._internal_nodes().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .config.Connection connections = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_connections_size());
               i < n; i++) {
            const auto& repfield = this_._internal_connections().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:config.Runner)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Runner::ByteSizeLong(const MessageLite& base) {
          const Runner& this_ = static_cast<const Runner&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Runner::ByteSizeLong() const {
          const Runner& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:config.Runner)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .config.Node nodes = 1;
            {
              total_size += 1UL * this_._internal_nodes_size();
              for (const auto& msg : this_._internal_nodes()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .config.Connection connections = 2;
            {
              total_size += 1UL * this_._internal_connections_size();
              for (const auto& msg : this_._internal_connections()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Runner::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Runner*>(&to_msg);
  auto& from = static_cast<const Runner&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:config.Runner)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_nodes()->MergeFrom(
      from._internal_nodes());
  _this->_internal_mutable_connections()->MergeFrom(
      from._internal_connections());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Runner::CopyFrom(const Runner& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:config.Runner)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Runner::InternalSwap(Runner* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.nodes_.InternalSwap(&other->_impl_.nodes_);
  _impl_.connections_.InternalSwap(&other->_impl_.connections_);
}

::google::protobuf::Metadata Runner::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace config
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_config_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
